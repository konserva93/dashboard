{
  "env": {
    "browser": true
  },
  "extends": [
    "airbnb",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "experimentalObjectRestSpread": true
    },
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "sort-imports-es6-autofix"
  ],
  "reportUnusedDisableDirectives": true,
  "rules": {
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],
    "guard-for-in": "off", // ѕравило требует проверки наличи€ свойства в прототипе при работе с циклом "for..in", избыточно
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/order": "off", // ¬место этого правила используетс€ sort-imports-es6-autofix/sort-imports-es6
    "import/prefer-default-export": "off",
    "linebreak-style": [
      "error",
      "windows"
    ],
    "max-len": [
      "warn",
      {
        "code": 130
      }
    ],
    "max-params": [
      "error",
      {
        "max": 5
      }
    ],
    "no-restricted-syntax": [
      "error",
      "BinaryExpression[operator='in']"
    ],
    "object-curly-newline": [
      "error",
      {
        "ObjectExpression": {
          "multiline": true,
          "consistent": true
        },
        "ObjectPattern": {
          "multiline": true,
          "consistent": true
        },
        "ImportDeclaration": "never",
        "ExportDeclaration": {
          "multiline": true,
          "consistent": true
        }
      }
    ],
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [ ".js", ".jsx", ".ts", ".tsx" ]
      }
    ],
    "react/jsx-props-no-spreading": [
      "error",
      {
        "custom": "ignore"
      }
    ],
    "react/no-array-index-key": "off",
    "react/no-unused-prop-types": [
      "warn",
      {
        "skipShapeProps": false
      }
    ],
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react/static-property-placement": [
      "error",
      "static public field"
    ],
    "sort-imports-es6-autofix/sort-imports-es6": [
      "warn",
      {
        "ignoreCase": false,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": [ "none", "all", "multiple", "single" ]
      }
    ],
    "@typescript-eslint/indent": [ "error", 2 ],
    // HINT: „тобы типизированные правила работали корректно, нужно отключить базовые правила линта.
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        // »гнорировать "discard"-переменные
        "argsIgnorePattern": "^_$",
        "varsIgnorePattern": "^_$"
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "react/sort-comp": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": [ "error" ]
  },
  "settings": {
    "import/resolver": {
      "alias": {
        "extensions": [ ".js", ".jsx", ".ts", ".tsx" ],
        "map": [
          [ "@src", "./src" ],
          [ "@components", "./src/components" ],
          [ "@api", "./src/api" ]
        ]
      }
    }
  }
}
